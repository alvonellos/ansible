---
- name: Install KubeCtl
  hosts: all
  become: yes


  tasks:
  - name: Check if home directory exists
    stat:
      path: /home/{{ ansible_user }}
    register: home_dir

  - name: Create home directory if it doesn't exist
    file:
      path: /home/{{ ansible_user }}
      state: directory
    when: not home_dir.stat.exists


  - name: Get latest kubectl version
    uri:
      url: https://dl.k8s.io/release/stable.txt
      return_content: yes
      status_code: 200, 304
    register: version

  - name: Download the latest kubectl release
    uri:
      url: https://dl.k8s.io/release/{{ version.content }}/bin/linux/amd64/kubectl
      dest: /home/{{ ansible_user }}
      status_code: 200, 304
    register: kubectl

  - name: Download the kubectl checksum file
    uri:
      url: https://dl.k8s.io/{{ version.content }}/bin/linux/amd64/kubectl.sha256
      dest: /home/{{ ansible_user }}
      status_code: 200, 304

  - name: Validate the kubectl binary against the checksum file
    shell: echo "$(cat /home/{{ ansible_user }}/kubectl.sha256)"
    register: source_chksum

  - name: Compute new checksum of kubectl binary
    shell: sha256sum /home/{{ ansible_user }}/kubectl | awk '{print $1}'
    register: new_chksum

  - name: Assert that the kubectl binary is OK
    vars:
      expected: "kubectl: OK"
    assert:
      that:
        - source_chksum.stdout == new_chksum.stdout
      fail_msg: "Checksum does not match {{ source_chksum.stdout }} != {{ new_chksum.stdout }}"
      success_msg: "Successfully validated"

  - name: Move kubectl and change permissions
    file:
      src: "{{ kubectl.path }}"
      dest: /usr/local/bin/kubectl
      state: hard
      owner: root
      group: root
      mode: "+x"

  - name: Check if kubectl is installed
    shell: kubectl version --client
    register: client
    failed_when: client.rc > 1